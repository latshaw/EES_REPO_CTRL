-- dpram_ram_2port_0.vhd

-- Generated using ACDS version 18.1 222

library IEEE;
library ram_2port_181;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dpram_ram_2port_0 is
	port (
		data_a    : in  std_logic_vector(17 downto 0) := (others => '0'); --    data_a.datain_a
		q_a       : out std_logic_vector(17 downto 0);                    --       q_a.dataout_a
		data_b    : in  std_logic_vector(17 downto 0) := (others => '0'); --    data_b.datain_b
		q_b       : out std_logic_vector(17 downto 0);                    --       q_b.dataout_b
		address_a : in  std_logic_vector(11 downto 0) := (others => '0'); -- address_a.address_a
		address_b : in  std_logic_vector(11 downto 0) := (others => '0'); -- address_b.address_b
		wren_a    : in  std_logic                     := '0';             --    wren_a.wren_a
		wren_b    : in  std_logic                     := '0';             --    wren_b.wren_b
		clock_a   : in  std_logic                     := '0';             --   clock_a.clk
		clock_b   : in  std_logic                     := '0'              --   clock_b.clk
	);
end entity dpram_ram_2port_0;

architecture rtl of dpram_ram_2port_0 is
	component dpram_ram_2port_0_ram_2port_181_uup24si_cmp is
		port (
			data_a    : in  std_logic_vector(17 downto 0) := (others => 'X'); -- datain_a
			q_a       : out std_logic_vector(17 downto 0);                    -- dataout_a
			data_b    : in  std_logic_vector(17 downto 0) := (others => 'X'); -- datain_b
			q_b       : out std_logic_vector(17 downto 0);                    -- dataout_b
			address_a : in  std_logic_vector(11 downto 0) := (others => 'X'); -- address_a
			address_b : in  std_logic_vector(11 downto 0) := (others => 'X'); -- address_b
			wren_a    : in  std_logic                     := 'X';             -- wren_a
			wren_b    : in  std_logic                     := 'X';             -- wren_b
			clock_a   : in  std_logic                     := 'X';             -- clk
			clock_b   : in  std_logic                     := 'X'              -- clk
		);
	end component dpram_ram_2port_0_ram_2port_181_uup24si_cmp;

	for ram_2port_0 : dpram_ram_2port_0_ram_2port_181_uup24si_cmp
		use entity ram_2port_181.dpram_ram_2port_0_ram_2port_181_uup24si;
begin

	ram_2port_0 : component dpram_ram_2port_0_ram_2port_181_uup24si_cmp
		port map (
			data_a    => data_a,    --    data_a.datain_a
			q_a       => q_a,       --       q_a.dataout_a
			data_b    => data_b,    --    data_b.datain_b
			q_b       => q_b,       --       q_b.dataout_b
			address_a => address_a, -- address_a.address_a
			address_b => address_b, -- address_b.address_b
			wren_a    => wren_a,    --    wren_a.wren_a
			wren_b    => wren_b,    --    wren_b.wren_b
			clock_a   => clock_a,   --   clock_a.clk
			clock_b   => clock_b    --   clock_b.clk
		);

end architecture rtl; -- of dpram_ram_2port_0
